// <auto-generated>
//  automatically @generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ovrAvatar.Arbiter
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public enum PropertyValue : byte
{
  NONE = 0,
  IntegerValue = 1,
  LongValue = 2,
  StringValue = 3,
  BoolValue = 4,
  FloatValue = 5,
  Vec3Value = 6,
  Vec4Value = 7,
  QuatValue = 8,
  JointParamsValue = 9,
  LODValue = 10,
};

public class PropertyValueUnion {
  public PropertyValue Type { get; set; }
  public object Value { get; set; }

  public PropertyValueUnion() {
    this.Type = PropertyValue.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public ovrAvatar.Arbiter.IntegerValueT AsIntegerValue() { return this.As<ovrAvatar.Arbiter.IntegerValueT>(); }
  public ovrAvatar.Arbiter.LongValueT AsLongValue() { return this.As<ovrAvatar.Arbiter.LongValueT>(); }
  public ovrAvatar.Arbiter.StringValueT AsStringValue() { return this.As<ovrAvatar.Arbiter.StringValueT>(); }
  public ovrAvatar.Arbiter.BoolValueT AsBoolValue() { return this.As<ovrAvatar.Arbiter.BoolValueT>(); }
  public ovrAvatar.Arbiter.FloatValueT AsFloatValue() { return this.As<ovrAvatar.Arbiter.FloatValueT>(); }
  public ovrAvatar.Arbiter.Vec3ValueT AsVec3Value() { return this.As<ovrAvatar.Arbiter.Vec3ValueT>(); }
  public ovrAvatar.Arbiter.Vec4ValueT AsVec4Value() { return this.As<ovrAvatar.Arbiter.Vec4ValueT>(); }
  public ovrAvatar.Arbiter.QuatValueT AsQuatValue() { return this.As<ovrAvatar.Arbiter.QuatValueT>(); }
  public ovrAvatar.Arbiter.JointParamsValueT AsJointParamsValue() { return this.As<ovrAvatar.Arbiter.JointParamsValueT>(); }
  public ovrAvatar.Arbiter.LODValueT AsLODValue() { return this.As<ovrAvatar.Arbiter.LODValueT>(); }

  public static int Pack(FlatBuffers.FlatBufferBuilder builder, PropertyValueUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case PropertyValue.IntegerValue: return ovrAvatar.Arbiter.IntegerValue.Pack(builder, _o.AsIntegerValue()).Value;
      case PropertyValue.LongValue: return ovrAvatar.Arbiter.LongValue.Pack(builder, _o.AsLongValue()).Value;
      case PropertyValue.StringValue: return ovrAvatar.Arbiter.StringValue.Pack(builder, _o.AsStringValue()).Value;
      case PropertyValue.BoolValue: return ovrAvatar.Arbiter.BoolValue.Pack(builder, _o.AsBoolValue()).Value;
      case PropertyValue.FloatValue: return ovrAvatar.Arbiter.FloatValue.Pack(builder, _o.AsFloatValue()).Value;
      case PropertyValue.Vec3Value: return ovrAvatar.Arbiter.Vec3Value.Pack(builder, _o.AsVec3Value()).Value;
      case PropertyValue.Vec4Value: return ovrAvatar.Arbiter.Vec4Value.Pack(builder, _o.AsVec4Value()).Value;
      case PropertyValue.QuatValue: return ovrAvatar.Arbiter.QuatValue.Pack(builder, _o.AsQuatValue()).Value;
      case PropertyValue.JointParamsValue: return ovrAvatar.Arbiter.JointParamsValue.Pack(builder, _o.AsJointParamsValue()).Value;
      case PropertyValue.LODValue: return ovrAvatar.Arbiter.LODValue.Pack(builder, _o.AsLODValue()).Value;
    }
  }
}

public enum Property : byte
{
  NONE = 0,
  ListProperties = 1,
  AvailableProperties = 2,
  PropertyRegister = 3,
  PropertyUpdate = 4,
};

public class PropertyUnion {
  public Property Type { get; set; }
  public object Value { get; set; }

  public PropertyUnion() {
    this.Type = Property.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public ovrAvatar.Arbiter.ListPropertiesT AsListProperties() { return this.As<ovrAvatar.Arbiter.ListPropertiesT>(); }
  public ovrAvatar.Arbiter.AvailablePropertiesT AsAvailableProperties() { return this.As<ovrAvatar.Arbiter.AvailablePropertiesT>(); }
  public ovrAvatar.Arbiter.PropertyRegisterT AsPropertyRegister() { return this.As<ovrAvatar.Arbiter.PropertyRegisterT>(); }
  public ovrAvatar.Arbiter.PropertyUpdateT AsPropertyUpdate() { return this.As<ovrAvatar.Arbiter.PropertyUpdateT>(); }

  public static int Pack(FlatBuffers.FlatBufferBuilder builder, PropertyUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case Property.ListProperties: return ovrAvatar.Arbiter.ListProperties.Pack(builder, _o.AsListProperties()).Value;
      case Property.AvailableProperties: return ovrAvatar.Arbiter.AvailableProperties.Pack(builder, _o.AsAvailableProperties()).Value;
      case Property.PropertyRegister: return ovrAvatar.Arbiter.PropertyRegister.Pack(builder, _o.AsPropertyRegister()).Value;
      case Property.PropertyUpdate: return ovrAvatar.Arbiter.PropertyUpdate.Pack(builder, _o.AsPropertyUpdate()).Value;
    }
  }
}

public struct ListProperties : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ListProperties GetRootAsListProperties(ByteBuffer _bb) { return GetRootAsListProperties(_bb, new ListProperties()); }
  public static ListProperties GetRootAsListProperties(ByteBuffer _bb, ListProperties obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ListProperties __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Value { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateValue(int value) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, value); return true; } else { return false; } }

  public static Offset<ovrAvatar.Arbiter.ListProperties> CreateListProperties(FlatBufferBuilder builder,
      int value = 0) {
    builder.StartTable(1);
    ListProperties.AddValue(builder, value);
    return ListProperties.EndListProperties(builder);
  }

  public static void StartListProperties(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddValue(FlatBufferBuilder builder, int value) { builder.AddInt(0, value, 0); }
  public static Offset<ovrAvatar.Arbiter.ListProperties> EndListProperties(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.ListProperties>(o);
  }
  public ListPropertiesT UnPack() {
    var _o = new ListPropertiesT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ListPropertiesT _o) {
    _o.Value = this.Value;
  }
  public static Offset<ovrAvatar.Arbiter.ListProperties> Pack(FlatBufferBuilder builder, ListPropertiesT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.ListProperties>);
    return CreateListProperties(
      builder,
      _o.Value);
  }
};

public class ListPropertiesT
{
  public int Value { get; set; }

  public ListPropertiesT() {
    this.Value = 0;
  }
}

public struct PropertyRegister : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static PropertyRegister GetRootAsPropertyRegister(ByteBuffer _bb) { return GetRootAsPropertyRegister(_bb, new PropertyRegister()); }
  public static PropertyRegister GetRootAsPropertyRegister(ByteBuffer _bb, PropertyRegister obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PropertyRegister __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  public string PropertyName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPropertyNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetPropertyNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetPropertyNameArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<ovrAvatar.Arbiter.PropertyRegister> CreatePropertyRegister(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset property_nameOffset = default(StringOffset)) {
    builder.StartTable(2);
    PropertyRegister.AddPropertyName(builder, property_nameOffset);
    PropertyRegister.AddId(builder, idOffset);
    return PropertyRegister.EndPropertyRegister(builder);
  }

  public static void StartPropertyRegister(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddPropertyName(FlatBufferBuilder builder, StringOffset propertyNameOffset) { builder.AddOffset(1, propertyNameOffset.Value, 0); }
  public static Offset<ovrAvatar.Arbiter.PropertyRegister> EndPropertyRegister(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.PropertyRegister>(o);
  }
  public PropertyRegisterT UnPack() {
    var _o = new PropertyRegisterT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PropertyRegisterT _o) {
    _o.Id = this.Id;
    _o.PropertyName = this.PropertyName;
  }
  public static Offset<ovrAvatar.Arbiter.PropertyRegister> Pack(FlatBufferBuilder builder, PropertyRegisterT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.PropertyRegister>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _property_name = _o.PropertyName == null ? default(StringOffset) : builder.CreateString(_o.PropertyName);
    return CreatePropertyRegister(
      builder,
      _id,
      _property_name);
  }
};

public class PropertyRegisterT
{
  public string Id { get; set; }
  public string PropertyName { get; set; }

  public PropertyRegisterT() {
    this.Id = null;
    this.PropertyName = null;
  }
}

public struct IntegerValue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static IntegerValue GetRootAsIntegerValue(ByteBuffer _bb) { return GetRootAsIntegerValue(_bb, new IntegerValue()); }
  public static IntegerValue GetRootAsIntegerValue(ByteBuffer _bb, IntegerValue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public IntegerValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int I { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateI(int i) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, i); return true; } else { return false; } }

  public static Offset<ovrAvatar.Arbiter.IntegerValue> CreateIntegerValue(FlatBufferBuilder builder,
      int i = 0) {
    builder.StartTable(1);
    IntegerValue.AddI(builder, i);
    return IntegerValue.EndIntegerValue(builder);
  }

  public static void StartIntegerValue(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddI(FlatBufferBuilder builder, int i) { builder.AddInt(0, i, 0); }
  public static Offset<ovrAvatar.Arbiter.IntegerValue> EndIntegerValue(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.IntegerValue>(o);
  }
  public IntegerValueT UnPack() {
    var _o = new IntegerValueT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(IntegerValueT _o) {
    _o.I = this.I;
  }
  public static Offset<ovrAvatar.Arbiter.IntegerValue> Pack(FlatBufferBuilder builder, IntegerValueT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.IntegerValue>);
    return CreateIntegerValue(
      builder,
      _o.I);
  }
};

public class IntegerValueT
{
  public int I { get; set; }

  public IntegerValueT() {
    this.I = 0;
  }
}

public struct LongValue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static LongValue GetRootAsLongValue(ByteBuffer _bb) { return GetRootAsLongValue(_bb, new LongValue()); }
  public static LongValue GetRootAsLongValue(ByteBuffer _bb, LongValue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LongValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long L { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public bool MutateL(long l) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutLong(o + __p.bb_pos, l); return true; } else { return false; } }

  public static Offset<ovrAvatar.Arbiter.LongValue> CreateLongValue(FlatBufferBuilder builder,
      long l = 0) {
    builder.StartTable(1);
    LongValue.AddL(builder, l);
    return LongValue.EndLongValue(builder);
  }

  public static void StartLongValue(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddL(FlatBufferBuilder builder, long l) { builder.AddLong(0, l, 0); }
  public static Offset<ovrAvatar.Arbiter.LongValue> EndLongValue(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.LongValue>(o);
  }
  public LongValueT UnPack() {
    var _o = new LongValueT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(LongValueT _o) {
    _o.L = this.L;
  }
  public static Offset<ovrAvatar.Arbiter.LongValue> Pack(FlatBufferBuilder builder, LongValueT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.LongValue>);
    return CreateLongValue(
      builder,
      _o.L);
  }
};

public class LongValueT
{
  public long L { get; set; }

  public LongValueT() {
    this.L = 0;
  }
}

public struct StringValue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static StringValue GetRootAsStringValue(ByteBuffer _bb) { return GetRootAsStringValue(_bb, new StringValue()); }
  public static StringValue GetRootAsStringValue(ByteBuffer _bb, StringValue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public StringValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string S { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetSBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetSArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ovrAvatar.Arbiter.StringValue> CreateStringValue(FlatBufferBuilder builder,
      StringOffset sOffset = default(StringOffset)) {
    builder.StartTable(1);
    StringValue.AddS(builder, sOffset);
    return StringValue.EndStringValue(builder);
  }

  public static void StartStringValue(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddS(FlatBufferBuilder builder, StringOffset sOffset) { builder.AddOffset(0, sOffset.Value, 0); }
  public static Offset<ovrAvatar.Arbiter.StringValue> EndStringValue(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.StringValue>(o);
  }
  public StringValueT UnPack() {
    var _o = new StringValueT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(StringValueT _o) {
    _o.S = this.S;
  }
  public static Offset<ovrAvatar.Arbiter.StringValue> Pack(FlatBufferBuilder builder, StringValueT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.StringValue>);
    var _s = _o.S == null ? default(StringOffset) : builder.CreateString(_o.S);
    return CreateStringValue(
      builder,
      _s);
  }
};

public class StringValueT
{
  public string S { get; set; }

  public StringValueT() {
    this.S = null;
  }
}

public struct BoolValue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static BoolValue GetRootAsBoolValue(ByteBuffer _bb) { return GetRootAsBoolValue(_bb, new BoolValue()); }
  public static BoolValue GetRootAsBoolValue(ByteBuffer _bb, BoolValue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BoolValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool B { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool MutateB(bool b) { int o = __p.__offset(4); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)(b ? 1 : 0)); return true; } else { return false; } }

  public static Offset<ovrAvatar.Arbiter.BoolValue> CreateBoolValue(FlatBufferBuilder builder,
      bool b = false) {
    builder.StartTable(1);
    BoolValue.AddB(builder, b);
    return BoolValue.EndBoolValue(builder);
  }

  public static void StartBoolValue(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddB(FlatBufferBuilder builder, bool b) { builder.AddBool(0, b, false); }
  public static Offset<ovrAvatar.Arbiter.BoolValue> EndBoolValue(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.BoolValue>(o);
  }
  public BoolValueT UnPack() {
    var _o = new BoolValueT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(BoolValueT _o) {
    _o.B = this.B;
  }
  public static Offset<ovrAvatar.Arbiter.BoolValue> Pack(FlatBufferBuilder builder, BoolValueT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.BoolValue>);
    return CreateBoolValue(
      builder,
      _o.B);
  }
};

public class BoolValueT
{
  public bool B { get; set; }

  public BoolValueT() {
    this.B = false;
  }
}

public struct FloatValue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static FloatValue GetRootAsFloatValue(ByteBuffer _bb) { return GetRootAsFloatValue(_bb, new FloatValue()); }
  public static FloatValue GetRootAsFloatValue(ByteBuffer _bb, FloatValue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FloatValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float F { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateF(float f) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, f); return true; } else { return false; } }

  public static Offset<ovrAvatar.Arbiter.FloatValue> CreateFloatValue(FlatBufferBuilder builder,
      float f = 0.0f) {
    builder.StartTable(1);
    FloatValue.AddF(builder, f);
    return FloatValue.EndFloatValue(builder);
  }

  public static void StartFloatValue(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddF(FlatBufferBuilder builder, float f) { builder.AddFloat(0, f, 0.0f); }
  public static Offset<ovrAvatar.Arbiter.FloatValue> EndFloatValue(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.FloatValue>(o);
  }
  public FloatValueT UnPack() {
    var _o = new FloatValueT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FloatValueT _o) {
    _o.F = this.F;
  }
  public static Offset<ovrAvatar.Arbiter.FloatValue> Pack(FlatBufferBuilder builder, FloatValueT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.FloatValue>);
    return CreateFloatValue(
      builder,
      _o.F);
  }
};

public class FloatValueT
{
  public float F { get; set; }

  public FloatValueT() {
    this.F = 0.0f;
  }
}

public struct LODValue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static LODValue GetRootAsLODValue(ByteBuffer _bb) { return GetRootAsLODValue(_bb, new LODValue()); }
  public static LODValue GetRootAsLODValue(ByteBuffer _bb, LODValue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LODValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateId(int id) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, id); return true; } else { return false; } }
  public int ImportanceScore { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateImportanceScore(int importance_score) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, importance_score); return true; } else { return false; } }
  public int MaxLodThreshold { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateMaxLodThreshold(int max_lod_threshold) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, max_lod_threshold); return true; } else { return false; } }
  public int AssignedLod { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateAssignedLod(int assigned_lod) { int o = __p.__offset(10); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, assigned_lod); return true; } else { return false; } }
  public bool IsPlayer { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool MutateIsPlayer(bool is_player) { int o = __p.__offset(12); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)(is_player ? 1 : 0)); return true; } else { return false; } }
  public bool IsCulled { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool MutateIsCulled(bool is_culled) { int o = __p.__offset(14); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)(is_culled ? 1 : 0)); return true; } else { return false; } }
  public int Weights(int j) { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int WeightsLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetWeightsBytes() { return __p.__vector_as_span<int>(16, 4); }
#else
  public ArraySegment<byte>? GetWeightsBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public int[] GetWeightsArray() { return __p.__vector_as_array<int>(16); }
  public bool MutateWeights(int j, int weights) { int o = __p.__offset(16); if (o != 0) { __p.bb.PutInt(__p.__vector(o) + j * 4, weights); return true; } else { return false; } }

  public static Offset<ovrAvatar.Arbiter.LODValue> CreateLODValue(FlatBufferBuilder builder,
      int id = 0,
      int importance_score = 0,
      int max_lod_threshold = 0,
      int assigned_lod = 0,
      bool is_player = false,
      bool is_culled = false,
      VectorOffset weightsOffset = default(VectorOffset)) {
    builder.StartTable(7);
    LODValue.AddWeights(builder, weightsOffset);
    LODValue.AddAssignedLod(builder, assigned_lod);
    LODValue.AddMaxLodThreshold(builder, max_lod_threshold);
    LODValue.AddImportanceScore(builder, importance_score);
    LODValue.AddId(builder, id);
    LODValue.AddIsCulled(builder, is_culled);
    LODValue.AddIsPlayer(builder, is_player);
    return LODValue.EndLODValue(builder);
  }

  public static void StartLODValue(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddImportanceScore(FlatBufferBuilder builder, int importanceScore) { builder.AddInt(1, importanceScore, 0); }
  public static void AddMaxLodThreshold(FlatBufferBuilder builder, int maxLodThreshold) { builder.AddInt(2, maxLodThreshold, 0); }
  public static void AddAssignedLod(FlatBufferBuilder builder, int assignedLod) { builder.AddInt(3, assignedLod, 0); }
  public static void AddIsPlayer(FlatBufferBuilder builder, bool isPlayer) { builder.AddBool(4, isPlayer, false); }
  public static void AddIsCulled(FlatBufferBuilder builder, bool isCulled) { builder.AddBool(5, isCulled, false); }
  public static void AddWeights(FlatBufferBuilder builder, VectorOffset weightsOffset) { builder.AddOffset(6, weightsOffset.Value, 0); }
  public static VectorOffset CreateWeightsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateWeightsVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartWeightsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ovrAvatar.Arbiter.LODValue> EndLODValue(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.LODValue>(o);
  }
  public LODValueT UnPack() {
    var _o = new LODValueT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(LODValueT _o) {
    _o.Id = this.Id;
    _o.ImportanceScore = this.ImportanceScore;
    _o.MaxLodThreshold = this.MaxLodThreshold;
    _o.AssignedLod = this.AssignedLod;
    _o.IsPlayer = this.IsPlayer;
    _o.IsCulled = this.IsCulled;
    _o.Weights = new List<int>();
    for (var _j = 0; _j < this.WeightsLength; ++_j) {_o.Weights.Add(this.Weights(_j));}
  }
  public static Offset<ovrAvatar.Arbiter.LODValue> Pack(FlatBufferBuilder builder, LODValueT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.LODValue>);
    var _weights = default(VectorOffset);
    if (_o.Weights != null) {
      var __weights = _o.Weights.ToArray();
      _weights = CreateWeightsVector(builder, __weights);
    }
    return CreateLODValue(
      builder,
      _o.Id,
      _o.ImportanceScore,
      _o.MaxLodThreshold,
      _o.AssignedLod,
      _o.IsPlayer,
      _o.IsCulled,
      _weights);
  }
};

public class LODValueT
{
  public int Id { get; set; }
  public int ImportanceScore { get; set; }
  public int MaxLodThreshold { get; set; }
  public int AssignedLod { get; set; }
  public bool IsPlayer { get; set; }
  public bool IsCulled { get; set; }
  public List<int> Weights { get; set; }

  public LODValueT() {
    this.Id = 0;
    this.ImportanceScore = 0;
    this.MaxLodThreshold = 0;
    this.AssignedLod = 0;
    this.IsPlayer = false;
    this.IsCulled = false;
    this.Weights = null;
  }
}

public struct PropertyUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static PropertyUpdate GetRootAsPropertyUpdate(ByteBuffer _bb) { return GetRootAsPropertyUpdate(_bb, new PropertyUpdate()); }
  public static PropertyUpdate GetRootAsPropertyUpdate(ByteBuffer _bb, PropertyUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PropertyUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  public ovrAvatar.Arbiter.PropertyValue ValueType { get { int o = __p.__offset(6); return o != 0 ? (ovrAvatar.Arbiter.PropertyValue)__p.bb.Get(o + __p.bb_pos) : ovrAvatar.Arbiter.PropertyValue.NONE; } }
  public TTable? Value<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public ovrAvatar.Arbiter.IntegerValue ValueAsIntegerValue() { return Value<ovrAvatar.Arbiter.IntegerValue>().Value; }
  public ovrAvatar.Arbiter.LongValue ValueAsLongValue() { return Value<ovrAvatar.Arbiter.LongValue>().Value; }
  public ovrAvatar.Arbiter.StringValue ValueAsStringValue() { return Value<ovrAvatar.Arbiter.StringValue>().Value; }
  public ovrAvatar.Arbiter.BoolValue ValueAsBoolValue() { return Value<ovrAvatar.Arbiter.BoolValue>().Value; }
  public ovrAvatar.Arbiter.FloatValue ValueAsFloatValue() { return Value<ovrAvatar.Arbiter.FloatValue>().Value; }
  public ovrAvatar.Arbiter.Vec3Value ValueAsVec3Value() { return Value<ovrAvatar.Arbiter.Vec3Value>().Value; }
  public ovrAvatar.Arbiter.Vec4Value ValueAsVec4Value() { return Value<ovrAvatar.Arbiter.Vec4Value>().Value; }
  public ovrAvatar.Arbiter.QuatValue ValueAsQuatValue() { return Value<ovrAvatar.Arbiter.QuatValue>().Value; }
  public ovrAvatar.Arbiter.JointParamsValue ValueAsJointParamsValue() { return Value<ovrAvatar.Arbiter.JointParamsValue>().Value; }
  public ovrAvatar.Arbiter.LODValue ValueAsLODValue() { return Value<ovrAvatar.Arbiter.LODValue>().Value; }

  public static Offset<ovrAvatar.Arbiter.PropertyUpdate> CreatePropertyUpdate(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      ovrAvatar.Arbiter.PropertyValue value_type = ovrAvatar.Arbiter.PropertyValue.NONE,
      int valueOffset = 0) {
    builder.StartTable(3);
    PropertyUpdate.AddValue(builder, valueOffset);
    PropertyUpdate.AddId(builder, idOffset);
    PropertyUpdate.AddValueType(builder, value_type);
    return PropertyUpdate.EndPropertyUpdate(builder);
  }

  public static void StartPropertyUpdate(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddValueType(FlatBufferBuilder builder, ovrAvatar.Arbiter.PropertyValue valueType) { builder.AddByte(1, (byte)valueType, 0); }
  public static void AddValue(FlatBufferBuilder builder, int valueOffset) { builder.AddOffset(2, valueOffset, 0); }
  public static Offset<ovrAvatar.Arbiter.PropertyUpdate> EndPropertyUpdate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.PropertyUpdate>(o);
  }
  public PropertyUpdateT UnPack() {
    var _o = new PropertyUpdateT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PropertyUpdateT _o) {
    _o.Id = this.Id;
    _o.Value = new ovrAvatar.Arbiter.PropertyValueUnion();
    _o.Value.Type = this.ValueType;
    switch (this.ValueType) {
      default: break;
      case ovrAvatar.Arbiter.PropertyValue.IntegerValue:
        _o.Value.Value = this.Value<ovrAvatar.Arbiter.IntegerValue>().HasValue ? this.Value<ovrAvatar.Arbiter.IntegerValue>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.PropertyValue.LongValue:
        _o.Value.Value = this.Value<ovrAvatar.Arbiter.LongValue>().HasValue ? this.Value<ovrAvatar.Arbiter.LongValue>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.PropertyValue.StringValue:
        _o.Value.Value = this.Value<ovrAvatar.Arbiter.StringValue>().HasValue ? this.Value<ovrAvatar.Arbiter.StringValue>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.PropertyValue.BoolValue:
        _o.Value.Value = this.Value<ovrAvatar.Arbiter.BoolValue>().HasValue ? this.Value<ovrAvatar.Arbiter.BoolValue>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.PropertyValue.FloatValue:
        _o.Value.Value = this.Value<ovrAvatar.Arbiter.FloatValue>().HasValue ? this.Value<ovrAvatar.Arbiter.FloatValue>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.PropertyValue.Vec3Value:
        _o.Value.Value = this.Value<ovrAvatar.Arbiter.Vec3Value>().HasValue ? this.Value<ovrAvatar.Arbiter.Vec3Value>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.PropertyValue.Vec4Value:
        _o.Value.Value = this.Value<ovrAvatar.Arbiter.Vec4Value>().HasValue ? this.Value<ovrAvatar.Arbiter.Vec4Value>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.PropertyValue.QuatValue:
        _o.Value.Value = this.Value<ovrAvatar.Arbiter.QuatValue>().HasValue ? this.Value<ovrAvatar.Arbiter.QuatValue>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.PropertyValue.JointParamsValue:
        _o.Value.Value = this.Value<ovrAvatar.Arbiter.JointParamsValue>().HasValue ? this.Value<ovrAvatar.Arbiter.JointParamsValue>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.PropertyValue.LODValue:
        _o.Value.Value = this.Value<ovrAvatar.Arbiter.LODValue>().HasValue ? this.Value<ovrAvatar.Arbiter.LODValue>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<ovrAvatar.Arbiter.PropertyUpdate> Pack(FlatBufferBuilder builder, PropertyUpdateT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.PropertyUpdate>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _value_type = _o.Value == null ? ovrAvatar.Arbiter.PropertyValue.NONE : _o.Value.Type;
    var _value = _o.Value == null ? 0 : ovrAvatar.Arbiter.PropertyValueUnion.Pack(builder, _o.Value);
    return CreatePropertyUpdate(
      builder,
      _id,
      _value_type,
      _value);
  }
};

public class PropertyUpdateT
{
  public string Id { get; set; }
  public ovrAvatar.Arbiter.PropertyValueUnion Value { get; set; }

  public PropertyUpdateT() {
    this.Id = null;
    this.Value = null;
  }
}

public struct AvailableProperties : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static AvailableProperties GetRootAsAvailableProperties(ByteBuffer _bb) { return GetRootAsAvailableProperties(_bb, new AvailableProperties()); }
  public static AvailableProperties GetRootAsAvailableProperties(ByteBuffer _bb, AvailableProperties obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AvailableProperties __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ovrAvatar.Arbiter.PropertyUpdate? Properties(int j) { int o = __p.__offset(4); return o != 0 ? (ovrAvatar.Arbiter.PropertyUpdate?)(new ovrAvatar.Arbiter.PropertyUpdate()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PropertiesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ovrAvatar.Arbiter.AvailableProperties> CreateAvailableProperties(FlatBufferBuilder builder,
      VectorOffset propertiesOffset = default(VectorOffset)) {
    builder.StartTable(1);
    AvailableProperties.AddProperties(builder, propertiesOffset);
    return AvailableProperties.EndAvailableProperties(builder);
  }

  public static void StartAvailableProperties(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddProperties(FlatBufferBuilder builder, VectorOffset propertiesOffset) { builder.AddOffset(0, propertiesOffset.Value, 0); }
  public static VectorOffset CreatePropertiesVector(FlatBufferBuilder builder, Offset<ovrAvatar.Arbiter.PropertyUpdate>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePropertiesVectorBlock(FlatBufferBuilder builder, Offset<ovrAvatar.Arbiter.PropertyUpdate>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPropertiesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ovrAvatar.Arbiter.AvailableProperties> EndAvailableProperties(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.AvailableProperties>(o);
  }
  public AvailablePropertiesT UnPack() {
    var _o = new AvailablePropertiesT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AvailablePropertiesT _o) {
    _o.Properties = new List<ovrAvatar.Arbiter.PropertyUpdateT>();
    for (var _j = 0; _j < this.PropertiesLength; ++_j) {_o.Properties.Add(this.Properties(_j).HasValue ? this.Properties(_j).Value.UnPack() : null);}
  }
  public static Offset<ovrAvatar.Arbiter.AvailableProperties> Pack(FlatBufferBuilder builder, AvailablePropertiesT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.AvailableProperties>);
    var _properties = default(VectorOffset);
    if (_o.Properties != null) {
      var __properties = new Offset<ovrAvatar.Arbiter.PropertyUpdate>[_o.Properties.Count];
      for (var _j = 0; _j < __properties.Length; ++_j) { __properties[_j] = ovrAvatar.Arbiter.PropertyUpdate.Pack(builder, _o.Properties[_j]); }
      _properties = CreatePropertiesVector(builder, __properties);
    }
    return CreateAvailableProperties(
      builder,
      _properties);
  }
};

public class AvailablePropertiesT
{
  public List<ovrAvatar.Arbiter.PropertyUpdateT> Properties { get; set; }

  public AvailablePropertiesT() {
    this.Properties = null;
  }
}

public struct PropertyUpdateBatch : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static PropertyUpdateBatch GetRootAsPropertyUpdateBatch(ByteBuffer _bb) { return GetRootAsPropertyUpdateBatch(_bb, new PropertyUpdateBatch()); }
  public static PropertyUpdateBatch GetRootAsPropertyUpdateBatch(ByteBuffer _bb, PropertyUpdateBatch obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PropertyUpdateBatch __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ovrAvatar.Arbiter.PropertyUpdate? Updates(int j) { int o = __p.__offset(4); return o != 0 ? (ovrAvatar.Arbiter.PropertyUpdate?)(new ovrAvatar.Arbiter.PropertyUpdate()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int UpdatesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ovrAvatar.Arbiter.PropertyUpdateBatch> CreatePropertyUpdateBatch(FlatBufferBuilder builder,
      VectorOffset updatesOffset = default(VectorOffset)) {
    builder.StartTable(1);
    PropertyUpdateBatch.AddUpdates(builder, updatesOffset);
    return PropertyUpdateBatch.EndPropertyUpdateBatch(builder);
  }

  public static void StartPropertyUpdateBatch(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddUpdates(FlatBufferBuilder builder, VectorOffset updatesOffset) { builder.AddOffset(0, updatesOffset.Value, 0); }
  public static VectorOffset CreateUpdatesVector(FlatBufferBuilder builder, Offset<ovrAvatar.Arbiter.PropertyUpdate>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateUpdatesVectorBlock(FlatBufferBuilder builder, Offset<ovrAvatar.Arbiter.PropertyUpdate>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartUpdatesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ovrAvatar.Arbiter.PropertyUpdateBatch> EndPropertyUpdateBatch(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.PropertyUpdateBatch>(o);
  }
  public PropertyUpdateBatchT UnPack() {
    var _o = new PropertyUpdateBatchT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PropertyUpdateBatchT _o) {
    _o.Updates = new List<ovrAvatar.Arbiter.PropertyUpdateT>();
    for (var _j = 0; _j < this.UpdatesLength; ++_j) {_o.Updates.Add(this.Updates(_j).HasValue ? this.Updates(_j).Value.UnPack() : null);}
  }
  public static Offset<ovrAvatar.Arbiter.PropertyUpdateBatch> Pack(FlatBufferBuilder builder, PropertyUpdateBatchT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.PropertyUpdateBatch>);
    var _updates = default(VectorOffset);
    if (_o.Updates != null) {
      var __updates = new Offset<ovrAvatar.Arbiter.PropertyUpdate>[_o.Updates.Count];
      for (var _j = 0; _j < __updates.Length; ++_j) { __updates[_j] = ovrAvatar.Arbiter.PropertyUpdate.Pack(builder, _o.Updates[_j]); }
      _updates = CreateUpdatesVector(builder, __updates);
    }
    return CreatePropertyUpdateBatch(
      builder,
      _updates);
  }
};

public class PropertyUpdateBatchT
{
  public List<ovrAvatar.Arbiter.PropertyUpdateT> Updates { get; set; }

  public PropertyUpdateBatchT() {
    this.Updates = null;
  }
}

public struct PropertyPacket : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static PropertyPacket GetRootAsPropertyPacket(ByteBuffer _bb) { return GetRootAsPropertyPacket(_bb, new PropertyPacket()); }
  public static PropertyPacket GetRootAsPropertyPacket(ByteBuffer _bb, PropertyPacket obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PropertyPacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ovrAvatar.Arbiter.Property DataType { get { int o = __p.__offset(4); return o != 0 ? (ovrAvatar.Arbiter.Property)__p.bb.Get(o + __p.bb_pos) : ovrAvatar.Arbiter.Property.NONE; } }
  public TTable? Data<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public ovrAvatar.Arbiter.ListProperties DataAsListProperties() { return Data<ovrAvatar.Arbiter.ListProperties>().Value; }
  public ovrAvatar.Arbiter.AvailableProperties DataAsAvailableProperties() { return Data<ovrAvatar.Arbiter.AvailableProperties>().Value; }
  public ovrAvatar.Arbiter.PropertyRegister DataAsPropertyRegister() { return Data<ovrAvatar.Arbiter.PropertyRegister>().Value; }
  public ovrAvatar.Arbiter.PropertyUpdate DataAsPropertyUpdate() { return Data<ovrAvatar.Arbiter.PropertyUpdate>().Value; }

  public static Offset<ovrAvatar.Arbiter.PropertyPacket> CreatePropertyPacket(FlatBufferBuilder builder,
      ovrAvatar.Arbiter.Property data_type = ovrAvatar.Arbiter.Property.NONE,
      int dataOffset = 0) {
    builder.StartTable(2);
    PropertyPacket.AddData(builder, dataOffset);
    PropertyPacket.AddDataType(builder, data_type);
    return PropertyPacket.EndPropertyPacket(builder);
  }

  public static void StartPropertyPacket(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddDataType(FlatBufferBuilder builder, ovrAvatar.Arbiter.Property dataType) { builder.AddByte(0, (byte)dataType, 0); }
  public static void AddData(FlatBufferBuilder builder, int dataOffset) { builder.AddOffset(1, dataOffset, 0); }
  public static Offset<ovrAvatar.Arbiter.PropertyPacket> EndPropertyPacket(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.PropertyPacket>(o);
  }
  public PropertyPacketT UnPack() {
    var _o = new PropertyPacketT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PropertyPacketT _o) {
    _o.Data = new ovrAvatar.Arbiter.PropertyUnion();
    _o.Data.Type = this.DataType;
    switch (this.DataType) {
      default: break;
      case ovrAvatar.Arbiter.Property.ListProperties:
        _o.Data.Value = this.Data<ovrAvatar.Arbiter.ListProperties>().HasValue ? this.Data<ovrAvatar.Arbiter.ListProperties>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.Property.AvailableProperties:
        _o.Data.Value = this.Data<ovrAvatar.Arbiter.AvailableProperties>().HasValue ? this.Data<ovrAvatar.Arbiter.AvailableProperties>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.Property.PropertyRegister:
        _o.Data.Value = this.Data<ovrAvatar.Arbiter.PropertyRegister>().HasValue ? this.Data<ovrAvatar.Arbiter.PropertyRegister>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.Property.PropertyUpdate:
        _o.Data.Value = this.Data<ovrAvatar.Arbiter.PropertyUpdate>().HasValue ? this.Data<ovrAvatar.Arbiter.PropertyUpdate>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<ovrAvatar.Arbiter.PropertyPacket> Pack(FlatBufferBuilder builder, PropertyPacketT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.PropertyPacket>);
    var _data_type = _o.Data == null ? ovrAvatar.Arbiter.Property.NONE : _o.Data.Type;
    var _data = _o.Data == null ? 0 : ovrAvatar.Arbiter.PropertyUnion.Pack(builder, _o.Data);
    return CreatePropertyPacket(
      builder,
      _data_type,
      _data);
  }
};

public class PropertyPacketT
{
  public ovrAvatar.Arbiter.PropertyUnion Data { get; set; }

  public PropertyPacketT() {
    this.Data = null;
  }
}


}
