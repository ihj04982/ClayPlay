// <auto-generated>
//  automatically @generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ovrAvatar.Arbiter
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Vec3Value : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Vec3Value GetRootAsVec3Value(ByteBuffer _bb) { return GetRootAsVec3Value(_bb, new Vec3Value()); }
  public static Vec3Value GetRootAsVec3Value(ByteBuffer _bb, Vec3Value obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Vec3Value __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateX(float x) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, x); return true; } else { return false; } }
  public float Y { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateY(float y) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, y); return true; } else { return false; } }
  public float Z { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateZ(float z) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, z); return true; } else { return false; } }

  public static Offset<ovrAvatar.Arbiter.Vec3Value> CreateVec3Value(FlatBufferBuilder builder,
      float x = 0.0f,
      float y = 0.0f,
      float z = 0.0f) {
    builder.StartTable(3);
    Vec3Value.AddZ(builder, z);
    Vec3Value.AddY(builder, y);
    Vec3Value.AddX(builder, x);
    return Vec3Value.EndVec3Value(builder);
  }

  public static void StartVec3Value(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddX(FlatBufferBuilder builder, float x) { builder.AddFloat(0, x, 0.0f); }
  public static void AddY(FlatBufferBuilder builder, float y) { builder.AddFloat(1, y, 0.0f); }
  public static void AddZ(FlatBufferBuilder builder, float z) { builder.AddFloat(2, z, 0.0f); }
  public static Offset<ovrAvatar.Arbiter.Vec3Value> EndVec3Value(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.Vec3Value>(o);
  }
  public Vec3ValueT UnPack() {
    var _o = new Vec3ValueT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(Vec3ValueT _o) {
    _o.X = this.X;
    _o.Y = this.Y;
    _o.Z = this.Z;
  }
  public static Offset<ovrAvatar.Arbiter.Vec3Value> Pack(FlatBufferBuilder builder, Vec3ValueT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.Vec3Value>);
    return CreateVec3Value(
      builder,
      _o.X,
      _o.Y,
      _o.Z);
  }
};

public class Vec3ValueT
{
  public float X { get; set; }
  public float Y { get; set; }
  public float Z { get; set; }

  public Vec3ValueT() {
    this.X = 0.0f;
    this.Y = 0.0f;
    this.Z = 0.0f;
  }
}

public struct Vec4Value : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Vec4Value GetRootAsVec4Value(ByteBuffer _bb) { return GetRootAsVec4Value(_bb, new Vec4Value()); }
  public static Vec4Value GetRootAsVec4Value(ByteBuffer _bb, Vec4Value obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Vec4Value __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateX(float x) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, x); return true; } else { return false; } }
  public float Y { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateY(float y) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, y); return true; } else { return false; } }
  public float Z { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateZ(float z) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, z); return true; } else { return false; } }
  public float W { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateW(float w) { int o = __p.__offset(10); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, w); return true; } else { return false; } }

  public static Offset<ovrAvatar.Arbiter.Vec4Value> CreateVec4Value(FlatBufferBuilder builder,
      float x = 0.0f,
      float y = 0.0f,
      float z = 0.0f,
      float w = 0.0f) {
    builder.StartTable(4);
    Vec4Value.AddW(builder, w);
    Vec4Value.AddZ(builder, z);
    Vec4Value.AddY(builder, y);
    Vec4Value.AddX(builder, x);
    return Vec4Value.EndVec4Value(builder);
  }

  public static void StartVec4Value(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddX(FlatBufferBuilder builder, float x) { builder.AddFloat(0, x, 0.0f); }
  public static void AddY(FlatBufferBuilder builder, float y) { builder.AddFloat(1, y, 0.0f); }
  public static void AddZ(FlatBufferBuilder builder, float z) { builder.AddFloat(2, z, 0.0f); }
  public static void AddW(FlatBufferBuilder builder, float w) { builder.AddFloat(3, w, 0.0f); }
  public static Offset<ovrAvatar.Arbiter.Vec4Value> EndVec4Value(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.Vec4Value>(o);
  }
  public Vec4ValueT UnPack() {
    var _o = new Vec4ValueT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(Vec4ValueT _o) {
    _o.X = this.X;
    _o.Y = this.Y;
    _o.Z = this.Z;
    _o.W = this.W;
  }
  public static Offset<ovrAvatar.Arbiter.Vec4Value> Pack(FlatBufferBuilder builder, Vec4ValueT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.Vec4Value>);
    return CreateVec4Value(
      builder,
      _o.X,
      _o.Y,
      _o.Z,
      _o.W);
  }
};

public class Vec4ValueT
{
  public float X { get; set; }
  public float Y { get; set; }
  public float Z { get; set; }
  public float W { get; set; }

  public Vec4ValueT() {
    this.X = 0.0f;
    this.Y = 0.0f;
    this.Z = 0.0f;
    this.W = 0.0f;
  }
}

public struct QuatValue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static QuatValue GetRootAsQuatValue(ByteBuffer _bb) { return GetRootAsQuatValue(_bb, new QuatValue()); }
  public static QuatValue GetRootAsQuatValue(ByteBuffer _bb, QuatValue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public QuatValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateX(float x) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, x); return true; } else { return false; } }
  public float Y { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateY(float y) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, y); return true; } else { return false; } }
  public float Z { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateZ(float z) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, z); return true; } else { return false; } }
  public float W { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateW(float w) { int o = __p.__offset(10); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, w); return true; } else { return false; } }

  public static Offset<ovrAvatar.Arbiter.QuatValue> CreateQuatValue(FlatBufferBuilder builder,
      float x = 0.0f,
      float y = 0.0f,
      float z = 0.0f,
      float w = 0.0f) {
    builder.StartTable(4);
    QuatValue.AddW(builder, w);
    QuatValue.AddZ(builder, z);
    QuatValue.AddY(builder, y);
    QuatValue.AddX(builder, x);
    return QuatValue.EndQuatValue(builder);
  }

  public static void StartQuatValue(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddX(FlatBufferBuilder builder, float x) { builder.AddFloat(0, x, 0.0f); }
  public static void AddY(FlatBufferBuilder builder, float y) { builder.AddFloat(1, y, 0.0f); }
  public static void AddZ(FlatBufferBuilder builder, float z) { builder.AddFloat(2, z, 0.0f); }
  public static void AddW(FlatBufferBuilder builder, float w) { builder.AddFloat(3, w, 0.0f); }
  public static Offset<ovrAvatar.Arbiter.QuatValue> EndQuatValue(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.QuatValue>(o);
  }
  public QuatValueT UnPack() {
    var _o = new QuatValueT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(QuatValueT _o) {
    _o.X = this.X;
    _o.Y = this.Y;
    _o.Z = this.Z;
    _o.W = this.W;
  }
  public static Offset<ovrAvatar.Arbiter.QuatValue> Pack(FlatBufferBuilder builder, QuatValueT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.QuatValue>);
    return CreateQuatValue(
      builder,
      _o.X,
      _o.Y,
      _o.Z,
      _o.W);
  }
};

public class QuatValueT
{
  public float X { get; set; }
  public float Y { get; set; }
  public float Z { get; set; }
  public float W { get; set; }

  public QuatValueT() {
    this.X = 0.0f;
    this.Y = 0.0f;
    this.Z = 0.0f;
    this.W = 0.0f;
  }
}

public struct JointParamsValue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static JointParamsValue GetRootAsJointParamsValue(ByteBuffer _bb) { return GetRootAsJointParamsValue(_bb, new JointParamsValue()); }
  public static JointParamsValue GetRootAsJointParamsValue(ByteBuffer _bb, JointParamsValue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public JointParamsValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ovrAvatar.Arbiter.QuatValue? Rotation { get { int o = __p.__offset(4); return o != 0 ? (ovrAvatar.Arbiter.QuatValue?)(new ovrAvatar.Arbiter.QuatValue()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ovrAvatar.Arbiter.Vec3Value? Translation { get { int o = __p.__offset(6); return o != 0 ? (ovrAvatar.Arbiter.Vec3Value?)(new ovrAvatar.Arbiter.Vec3Value()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public ovrAvatar.Arbiter.Vec3Value? Scale { get { int o = __p.__offset(8); return o != 0 ? (ovrAvatar.Arbiter.Vec3Value?)(new ovrAvatar.Arbiter.Vec3Value()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ovrAvatar.Arbiter.JointParamsValue> CreateJointParamsValue(FlatBufferBuilder builder,
      Offset<ovrAvatar.Arbiter.QuatValue> rotationOffset = default(Offset<ovrAvatar.Arbiter.QuatValue>),
      Offset<ovrAvatar.Arbiter.Vec3Value> translationOffset = default(Offset<ovrAvatar.Arbiter.Vec3Value>),
      Offset<ovrAvatar.Arbiter.Vec3Value> scaleOffset = default(Offset<ovrAvatar.Arbiter.Vec3Value>)) {
    builder.StartTable(3);
    JointParamsValue.AddScale(builder, scaleOffset);
    JointParamsValue.AddTranslation(builder, translationOffset);
    JointParamsValue.AddRotation(builder, rotationOffset);
    return JointParamsValue.EndJointParamsValue(builder);
  }

  public static void StartJointParamsValue(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddRotation(FlatBufferBuilder builder, Offset<ovrAvatar.Arbiter.QuatValue> rotationOffset) { builder.AddOffset(0, rotationOffset.Value, 0); }
  public static void AddTranslation(FlatBufferBuilder builder, Offset<ovrAvatar.Arbiter.Vec3Value> translationOffset) { builder.AddOffset(1, translationOffset.Value, 0); }
  public static void AddScale(FlatBufferBuilder builder, Offset<ovrAvatar.Arbiter.Vec3Value> scaleOffset) { builder.AddOffset(2, scaleOffset.Value, 0); }
  public static Offset<ovrAvatar.Arbiter.JointParamsValue> EndJointParamsValue(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.JointParamsValue>(o);
  }
  public JointParamsValueT UnPack() {
    var _o = new JointParamsValueT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(JointParamsValueT _o) {
    _o.Rotation = this.Rotation.HasValue ? this.Rotation.Value.UnPack() : null;
    _o.Translation = this.Translation.HasValue ? this.Translation.Value.UnPack() : null;
    _o.Scale = this.Scale.HasValue ? this.Scale.Value.UnPack() : null;
  }
  public static Offset<ovrAvatar.Arbiter.JointParamsValue> Pack(FlatBufferBuilder builder, JointParamsValueT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.JointParamsValue>);
    var _rotation = _o.Rotation == null ? default(Offset<ovrAvatar.Arbiter.QuatValue>) : ovrAvatar.Arbiter.QuatValue.Pack(builder, _o.Rotation);
    var _translation = _o.Translation == null ? default(Offset<ovrAvatar.Arbiter.Vec3Value>) : ovrAvatar.Arbiter.Vec3Value.Pack(builder, _o.Translation);
    var _scale = _o.Scale == null ? default(Offset<ovrAvatar.Arbiter.Vec3Value>) : ovrAvatar.Arbiter.Vec3Value.Pack(builder, _o.Scale);
    return CreateJointParamsValue(
      builder,
      _rotation,
      _translation,
      _scale);
  }
};

public class JointParamsValueT
{
  public ovrAvatar.Arbiter.QuatValueT Rotation { get; set; }
  public ovrAvatar.Arbiter.Vec3ValueT Translation { get; set; }
  public ovrAvatar.Arbiter.Vec3ValueT Scale { get; set; }

  public JointParamsValueT() {
    this.Rotation = null;
    this.Translation = null;
    this.Scale = null;
  }
}


}
