// <auto-generated>
//  automatically @generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ovrAvatar.Arbiter
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public enum Session : byte
{
  NONE = 0,
  SessionInitialize = 1,
  SessionInitializeAck = 2,
  SessionClose = 3,
};

public class SessionUnion {
  public Session Type { get; set; }
  public object Value { get; set; }

  public SessionUnion() {
    this.Type = Session.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public ovrAvatar.Arbiter.SessionInitializeT AsSessionInitialize() { return this.As<ovrAvatar.Arbiter.SessionInitializeT>(); }
  public ovrAvatar.Arbiter.SessionInitializeAckT AsSessionInitializeAck() { return this.As<ovrAvatar.Arbiter.SessionInitializeAckT>(); }
  public ovrAvatar.Arbiter.SessionCloseT AsSessionClose() { return this.As<ovrAvatar.Arbiter.SessionCloseT>(); }

  public static int Pack(FlatBuffers.FlatBufferBuilder builder, SessionUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case Session.SessionInitialize: return ovrAvatar.Arbiter.SessionInitialize.Pack(builder, _o.AsSessionInitialize()).Value;
      case Session.SessionInitializeAck: return ovrAvatar.Arbiter.SessionInitializeAck.Pack(builder, _o.AsSessionInitializeAck()).Value;
      case Session.SessionClose: return ovrAvatar.Arbiter.SessionClose.Pack(builder, _o.AsSessionClose()).Value;
    }
  }
}

public struct SessionInitialize : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SessionInitialize GetRootAsSessionInitialize(ByteBuffer _bb) { return GetRootAsSessionInitialize(_bb, new SessionInitialize()); }
  public static SessionInitialize GetRootAsSessionInitialize(ByteBuffer _bb, SessionInitialize obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SessionInitialize __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ClientVersionMajor { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateClientVersionMajor(int client_version_major) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, client_version_major); return true; } else { return false; } }
  public int ClientVersionMinor { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateClientVersionMinor(int client_version_minor) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, client_version_minor); return true; } else { return false; } }
  public int ProtocolVersionMajor { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateProtocolVersionMajor(int protocol_version_major) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, protocol_version_major); return true; } else { return false; } }
  public int ProtocolVersionMinor { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateProtocolVersionMinor(int protocol_version_minor) { int o = __p.__offset(10); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, protocol_version_minor); return true; } else { return false; } }
  public string ClientName { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClientNameBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetClientNameBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetClientNameArray() { return __p.__vector_as_array<byte>(12); }

  public static Offset<ovrAvatar.Arbiter.SessionInitialize> CreateSessionInitialize(FlatBufferBuilder builder,
      int client_version_major = 0,
      int client_version_minor = 0,
      int protocol_version_major = 0,
      int protocol_version_minor = 0,
      StringOffset client_nameOffset = default(StringOffset)) {
    builder.StartTable(5);
    SessionInitialize.AddClientName(builder, client_nameOffset);
    SessionInitialize.AddProtocolVersionMinor(builder, protocol_version_minor);
    SessionInitialize.AddProtocolVersionMajor(builder, protocol_version_major);
    SessionInitialize.AddClientVersionMinor(builder, client_version_minor);
    SessionInitialize.AddClientVersionMajor(builder, client_version_major);
    return SessionInitialize.EndSessionInitialize(builder);
  }

  public static void StartSessionInitialize(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddClientVersionMajor(FlatBufferBuilder builder, int clientVersionMajor) { builder.AddInt(0, clientVersionMajor, 0); }
  public static void AddClientVersionMinor(FlatBufferBuilder builder, int clientVersionMinor) { builder.AddInt(1, clientVersionMinor, 0); }
  public static void AddProtocolVersionMajor(FlatBufferBuilder builder, int protocolVersionMajor) { builder.AddInt(2, protocolVersionMajor, 0); }
  public static void AddProtocolVersionMinor(FlatBufferBuilder builder, int protocolVersionMinor) { builder.AddInt(3, protocolVersionMinor, 0); }
  public static void AddClientName(FlatBufferBuilder builder, StringOffset clientNameOffset) { builder.AddOffset(4, clientNameOffset.Value, 0); }
  public static Offset<ovrAvatar.Arbiter.SessionInitialize> EndSessionInitialize(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.SessionInitialize>(o);
  }
  public SessionInitializeT UnPack() {
    var _o = new SessionInitializeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SessionInitializeT _o) {
    _o.ClientVersionMajor = this.ClientVersionMajor;
    _o.ClientVersionMinor = this.ClientVersionMinor;
    _o.ProtocolVersionMajor = this.ProtocolVersionMajor;
    _o.ProtocolVersionMinor = this.ProtocolVersionMinor;
    _o.ClientName = this.ClientName;
  }
  public static Offset<ovrAvatar.Arbiter.SessionInitialize> Pack(FlatBufferBuilder builder, SessionInitializeT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.SessionInitialize>);
    var _client_name = _o.ClientName == null ? default(StringOffset) : builder.CreateString(_o.ClientName);
    return CreateSessionInitialize(
      builder,
      _o.ClientVersionMajor,
      _o.ClientVersionMinor,
      _o.ProtocolVersionMajor,
      _o.ProtocolVersionMinor,
      _client_name);
  }
};

public class SessionInitializeT
{
  public int ClientVersionMajor { get; set; }
  public int ClientVersionMinor { get; set; }
  public int ProtocolVersionMajor { get; set; }
  public int ProtocolVersionMinor { get; set; }
  public string ClientName { get; set; }

  public SessionInitializeT() {
    this.ClientVersionMajor = 0;
    this.ClientVersionMinor = 0;
    this.ProtocolVersionMajor = 0;
    this.ProtocolVersionMinor = 0;
    this.ClientName = null;
  }
}

public struct SessionInitializeAck : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SessionInitializeAck GetRootAsSessionInitializeAck(ByteBuffer _bb) { return GetRootAsSessionInitializeAck(_bb, new SessionInitializeAck()); }
  public static SessionInitializeAck GetRootAsSessionInitializeAck(ByteBuffer _bb, SessionInitializeAck obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SessionInitializeAck __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint SessionId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateSessionId(uint session_id) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, session_id); return true; } else { return false; } }

  public static Offset<ovrAvatar.Arbiter.SessionInitializeAck> CreateSessionInitializeAck(FlatBufferBuilder builder,
      uint session_id = 0) {
    builder.StartTable(1);
    SessionInitializeAck.AddSessionId(builder, session_id);
    return SessionInitializeAck.EndSessionInitializeAck(builder);
  }

  public static void StartSessionInitializeAck(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddSessionId(FlatBufferBuilder builder, uint sessionId) { builder.AddUint(0, sessionId, 0); }
  public static Offset<ovrAvatar.Arbiter.SessionInitializeAck> EndSessionInitializeAck(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.SessionInitializeAck>(o);
  }
  public SessionInitializeAckT UnPack() {
    var _o = new SessionInitializeAckT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SessionInitializeAckT _o) {
    _o.SessionId = this.SessionId;
  }
  public static Offset<ovrAvatar.Arbiter.SessionInitializeAck> Pack(FlatBufferBuilder builder, SessionInitializeAckT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.SessionInitializeAck>);
    return CreateSessionInitializeAck(
      builder,
      _o.SessionId);
  }
};

public class SessionInitializeAckT
{
  public uint SessionId { get; set; }

  public SessionInitializeAckT() {
    this.SessionId = 0;
  }
}

public struct SessionClose : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SessionClose GetRootAsSessionClose(ByteBuffer _bb) { return GetRootAsSessionClose(_bb, new SessionClose()); }
  public static SessionClose GetRootAsSessionClose(ByteBuffer _bb, SessionClose obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SessionClose __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string CloseReason { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCloseReasonBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetCloseReasonBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetCloseReasonArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ovrAvatar.Arbiter.SessionClose> CreateSessionClose(FlatBufferBuilder builder,
      StringOffset close_reasonOffset = default(StringOffset)) {
    builder.StartTable(1);
    SessionClose.AddCloseReason(builder, close_reasonOffset);
    return SessionClose.EndSessionClose(builder);
  }

  public static void StartSessionClose(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddCloseReason(FlatBufferBuilder builder, StringOffset closeReasonOffset) { builder.AddOffset(0, closeReasonOffset.Value, 0); }
  public static Offset<ovrAvatar.Arbiter.SessionClose> EndSessionClose(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.SessionClose>(o);
  }
  public SessionCloseT UnPack() {
    var _o = new SessionCloseT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SessionCloseT _o) {
    _o.CloseReason = this.CloseReason;
  }
  public static Offset<ovrAvatar.Arbiter.SessionClose> Pack(FlatBufferBuilder builder, SessionCloseT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.SessionClose>);
    var _close_reason = _o.CloseReason == null ? default(StringOffset) : builder.CreateString(_o.CloseReason);
    return CreateSessionClose(
      builder,
      _close_reason);
  }
};

public class SessionCloseT
{
  public string CloseReason { get; set; }

  public SessionCloseT() {
    this.CloseReason = null;
  }
}

public struct SessionPacket : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SessionPacket GetRootAsSessionPacket(ByteBuffer _bb) { return GetRootAsSessionPacket(_bb, new SessionPacket()); }
  public static SessionPacket GetRootAsSessionPacket(ByteBuffer _bb, SessionPacket obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SessionPacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ovrAvatar.Arbiter.Session DataType { get { int o = __p.__offset(4); return o != 0 ? (ovrAvatar.Arbiter.Session)__p.bb.Get(o + __p.bb_pos) : ovrAvatar.Arbiter.Session.NONE; } }
  public TTable? Data<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public ovrAvatar.Arbiter.SessionInitialize DataAsSessionInitialize() { return Data<ovrAvatar.Arbiter.SessionInitialize>().Value; }
  public ovrAvatar.Arbiter.SessionInitializeAck DataAsSessionInitializeAck() { return Data<ovrAvatar.Arbiter.SessionInitializeAck>().Value; }
  public ovrAvatar.Arbiter.SessionClose DataAsSessionClose() { return Data<ovrAvatar.Arbiter.SessionClose>().Value; }

  public static Offset<ovrAvatar.Arbiter.SessionPacket> CreateSessionPacket(FlatBufferBuilder builder,
      ovrAvatar.Arbiter.Session data_type = ovrAvatar.Arbiter.Session.NONE,
      int dataOffset = 0) {
    builder.StartTable(2);
    SessionPacket.AddData(builder, dataOffset);
    SessionPacket.AddDataType(builder, data_type);
    return SessionPacket.EndSessionPacket(builder);
  }

  public static void StartSessionPacket(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddDataType(FlatBufferBuilder builder, ovrAvatar.Arbiter.Session dataType) { builder.AddByte(0, (byte)dataType, 0); }
  public static void AddData(FlatBufferBuilder builder, int dataOffset) { builder.AddOffset(1, dataOffset, 0); }
  public static Offset<ovrAvatar.Arbiter.SessionPacket> EndSessionPacket(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ovrAvatar.Arbiter.SessionPacket>(o);
  }
  public SessionPacketT UnPack() {
    var _o = new SessionPacketT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SessionPacketT _o) {
    _o.Data = new ovrAvatar.Arbiter.SessionUnion();
    _o.Data.Type = this.DataType;
    switch (this.DataType) {
      default: break;
      case ovrAvatar.Arbiter.Session.SessionInitialize:
        _o.Data.Value = this.Data<ovrAvatar.Arbiter.SessionInitialize>().HasValue ? this.Data<ovrAvatar.Arbiter.SessionInitialize>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.Session.SessionInitializeAck:
        _o.Data.Value = this.Data<ovrAvatar.Arbiter.SessionInitializeAck>().HasValue ? this.Data<ovrAvatar.Arbiter.SessionInitializeAck>().Value.UnPack() : null;
        break;
      case ovrAvatar.Arbiter.Session.SessionClose:
        _o.Data.Value = this.Data<ovrAvatar.Arbiter.SessionClose>().HasValue ? this.Data<ovrAvatar.Arbiter.SessionClose>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<ovrAvatar.Arbiter.SessionPacket> Pack(FlatBufferBuilder builder, SessionPacketT _o) {
    if (_o == null) return default(Offset<ovrAvatar.Arbiter.SessionPacket>);
    var _data_type = _o.Data == null ? ovrAvatar.Arbiter.Session.NONE : _o.Data.Type;
    var _data = _o.Data == null ? 0 : ovrAvatar.Arbiter.SessionUnion.Pack(builder, _o.Data);
    return CreateSessionPacket(
      builder,
      _data_type,
      _data);
  }
};

public class SessionPacketT
{
  public ovrAvatar.Arbiter.SessionUnion Data { get; set; }

  public SessionPacketT() {
    this.Data = null;
  }
}


}
